name: Python application

on:
  push:
    branches:
      - '*'

jobs:
  python-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_SERVER: ${{ secrets.DB_SERVER }}
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
        TEST_POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
        TEST_POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        TEST_POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        TEST_POSTGRES_PORT: ${{ secrets.TEST_DB_PORT }}
        TEST_POSTGRES_SERVER: ${{ secrets.TEST_DB_SERVER }}
        ENVIRONMENT: ${{ secrets.ENVIRONMENT }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Set up Chrome WebDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver

    - name: Create test user in PostgreSQL
      run: |
        psql -h ${{ secrets.DB_SERVER }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c "CREATE USER ${{ secrets.TEST_DB_USER }} WITH PASSWORD '${{ secrets.TEST_DB_PASSWORD }}';"
        psql -h ${{ secrets.DB_SERVER }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c "ALTER USER ${{ secrets.TEST_DB_USER }} WITH SUPERUSER;"

    - name: Run tests
      run: |
        if pytest --collect-only | grep "collected 0 items"; then
          echo "No tests to run"
        else
          pytest
        fi
